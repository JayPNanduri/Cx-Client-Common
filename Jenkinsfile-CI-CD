#!/groovy
@Library('cx-jenkins-pipeline-kit') _

pipeline {
/*    parameters {
        string(name: 'buildDef', defaultValue: 'CxSAST.Main.Release.Setup', description: 'Tfs build definition name')
        string(name: "TriggeredArtifactoryPath", defaultValue: '', description: "full atrifactory repository path to the new artifacts that triggerd the pipeline")
    }*/
    agent { node { label 'CxSDLC-Slave' } }
    options {
        timestamps()
        timeout(time: 1, unit: 'HOURS')
        //skipDefaultCheckout()
    }
    stages {
        stage('Deploy Build Container') {
            steps {
                script {
                    sh 'printenv'
                    sh "cat k8s/namespace.yaml"
                    sh "sed -e \"s/<sha1>/sha1/\" -i k8s/namespace.yaml"
                    sh "cat k8s/namespace.yaml"
                    sh "docker run maven:3-openjdk-8-alpine"
                    sh "docker ps -a"
                }
            }
        }

        stage('Pipeline Info') {
            steps {
                script {
                    sh 'printenv'
                }
            }
        }
    }

    post {
        cleanup {
            script{
                sh "ls"
                sh "git branch"
                sh "cat k8s/namespace.yaml"
                cleanWs()
            }
        }
    }
}
